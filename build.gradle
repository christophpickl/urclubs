buildscript {
    ext {
        versionKotlin = "1.2.30"
        versionGuice = "4.2.0"
        versionJava = "1.8"
        versionKPotpourri = "1.7"
    }
    dependencies {
        classpath "gradle.plugin.edu.sc.seis:macAppBundle:2.1.8"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.30"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.2.30"
}

ext {
    myMainClassName = "com.github.christophpickl.urclubs.fx.FxAppStarter"
    myAppName = "UrClubs"
    myAppVersion = "1.0"
}

dependencies {
    // KOTLIN
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versionKotlin"
    compile "org.jetbrains.kotlin:kotlin-reflect:$versionKotlin"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"

    // COMMON
    compile "io.github.microutils:kotlin-logging:1.4.9"
    compile "com.github.christophpickl.kpotpourri:common4k:$versionKPotpourri"
    compile "com.github.christophpickl.kpotpourri:logback4k:$versionKPotpourri"
    compile "com.google.inject:guice:$versionGuice"

    // VIEW
    compile "no.tornado:tornadofx:1.7.14"

    // HTTP, HTML, JSON
    compile "org.apache.httpcomponents:httpclient:4.5.4"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2"
    compile "org.jsoup:jsoup:1.11.2"

    // DB
    compile "org.hibernate:hibernate-core:5.2.14.Final"
    compile 'org.hsqldb:hsqldb:2.3.3' // hsqldb 2.3.4 leads to the application to hang :-/
    compile "org.eclipse.persistence:javax.persistence:2.1.0"
    compile "javax.transaction:jta:1.1"
    compile "org.flywaydb:flyway-core:4.2.0"
    compile "com.google.inject.extensions:guice-persist:$versionGuice"

    // CACHE
    compile "org.ehcache:ehcache:3.5.0"
    compile "com.esotericsoftware:kryo:4.0.1"

    // TEST
    testCompile "org.testng:testng:6.13.1"
    testCompile "org.assertj:assertj-core:3.9.0"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
}

sourceCompatibility = versionJava
compileKotlin {
    kotlinOptions.jvmTarget = versionJava.toString()
}
compileTestKotlin {
    kotlinOptions.jvmTarget = versionJava.toString()
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://dl.bintray.com/christophpickl/cpickl" }
}

// =====================================================================================================================
// PACKAGING MAC
// =====================================================================================================================

// $ ./gradlew createApp -Durclubs.enableMacBundle=true
// $ ./gradlew createDmg -Durclubs.enableMacBundle=true

// travis lacks hdiutil binary, so only enabled by explicit sysproperty
if (System.properties.getProperty("urclubs.enableMacBundle") == "true") {
    println "[URCLUBS] enabling mac bundle"
    apply plugin: "edu.sc.seis.macAppBundle"

    macAppBundle {
        appName = myAppName
        dmgName = myAppName + "-" + myAppVersion

        mainClassName = myMainClassName
        icon = "src/main/buildMac/logo.icns"
        jvmVersion = "1.8+"

        javaProperties.put("apple.laf.useScreenMenuBar", "true")
        javaProperties.put("urclubs.isMacApp", "true")
//        javaExtras.put("-splash:\$APP_ROOT/Contents/Resources/splashscreen.jpg", null)
    }

    //noinspection GroovyAssignabilityCheck
//    task copySplashscreenForMacApp(type: Copy) {
//        from 'src/main/resources/urclubs/images/splashscreen.jpg'
//        into "build/macApp/${myAppName}.app/Contents/Resources"
//    }
//    createApp.dependsOn copySplashscreenForMacApp
}
